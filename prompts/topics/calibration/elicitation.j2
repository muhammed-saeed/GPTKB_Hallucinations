
SYSTEM: Return JSON only. No prose, no markdown, no code fences.

I want to construct a knowledge graph on the topic of "{{ root_subject }}".
Given a subject "{{ subject_name }}", return all facts you know in the format:

- Produce a large set of concise, factual triples.
- For *famous or well-documented* subjects, aim facts** (50–100+ preferred).
- For moderately known subjects, 30–50 facts.
- For lesser-known subjects, provide as many as possible (≥5 if any are known).
- If you do **not** know the subject, return an empty list.
- Always include at least one triple with predicate `"instanceOf"`.
- Keep each triple atomic — split multiple objects into separate triples.
- Avoid duplicates or verbose descriptions.
- Be generous but realistic; do not invent implausible details.
- The confidence should reflect your certainty:
  - **0.95–1.00** → universally established fact  
  - **0.70–0.94** → likely correct, generally reported  
  - **0.40–0.69** → plausible, but some uncertainty  
  - **<0.40** → speculative or doubtful — *omit such triples*


{
  "facts": [
    {"subject":"{{ subject_name }}","predicate":"<p>","object":"<o>","confidence":0.0-1.0}
  ]
}

Guidelines:
1. If you do not know the subject, return {"facts":[]}.
2. If the subject is not a named entity, return {"facts":[]}.
3. If the subject is not related to "{{ root_subject }}", return {"facts":[]}.
4. Include at least one triple where predicate is "instanceOf" when applicable.
5. Split multiple objects into separate triples.
6. Target approximately {{ max_facts_hint }} facts for popular subjects (5-10 for minor ones).
7. Use realistic confidence values between 0.0 and 1.0 for each value please.
8. Output only valid JSON as shown. Do not include commentary or explanations.



