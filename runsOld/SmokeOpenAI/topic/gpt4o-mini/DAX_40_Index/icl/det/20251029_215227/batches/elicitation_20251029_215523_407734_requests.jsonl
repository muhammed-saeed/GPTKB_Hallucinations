{"custom_id": "DAX 30 Index", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "system", "content": "Return JSON only."}, {"role": "user", "content": "You are a knowledge base construction expert.\n\n## Objective\nExtract factual (subject, predicate, object) triples for the given subject with **both high precision and high recall**.\n\n- **High precision:** Only include facts you are confident are true. Never guess or extrapolate.\n- **High recall:** Cover names, aliases, instance types, roles/positions, works, dates (coarse years ok), places, affiliations, awards, events, parts/contains, composition, influenced/inspired, predecessors/successors, etc.\n\nIf the subject is fictional/ambiguous/speculative or you are **not confident**, return exactly:\n{\"facts\": []}\n\n## Coverage & Bias-Aware Guidance\n- Actively consider **global coverage** (Global North/South, West/East). Do not default to Western entities/relations.\n\nAvoid hyper-specific long-tail details (episode numbers, street addresses, catalog/serial IDs).\n\n## Quantity & Quality Rules\n\n- **Globally famous subjects:** produce **50–100+** concise, factual triples.\n- **Moderately famous subjects:** produce **30–50**.\n- **Lesser-known but real subjects:** produce **10–30**.\n- **Unknown, ambiguous, or fictional subjects:** return exactly `{\"facts\": []}`.\n\n### Structural & Quality Requirements\n- Include at least one `\"instanceOf\"` triple when applicable.\n- Keep objects concise and use canonical names (avoid aliases unless relevant).\n- Each triple must be **atomic** — split multiple objects into separate triples.\n- **De-duplicate** all triples and avoid contradictions.\n- Maintain high precision — do not invent or speculate.\n- **STRICT JSON ONLY** — no prose, no markdown, no code fences.\n- Be generous but realistic: capture broad, well-known facts rather than obscure trivia.\n\n\n## Output contract\n- **STRICT JSON ONLY** — no prose, no markdown, no code fences.\n- Return the single object:\n  {\n    \"facts\": [\n      {\"subject\":\"...\", \"predicate\":\"...\", \"object\":\"...\"}\n    ]\n  }\n- Always include at least one `\"instanceOf\"`.\n- Keep each triple atomic. Use canonical, concise object names. De-duplicate.\n\n---\n\n## ✅ Positive ICL (general, high-precision)\n\nInput: \"Eiffel Tower\"\nOutput:\n{\n  \"facts\": [\n    {\"subject\":\"Eiffel Tower\",\"predicate\":\"instanceOf\",\"object\":\"tower\"},\n    {\"subject\":\"Eiffel Tower\",\"predicate\":\"locatedIn\",\"object\":\"Paris\"},\n    {\"subject\":\"Eiffel Tower\",\"predicate\":\"country\",\"object\":\"France\"},\n    {\"subject\":\"Eiffel Tower\",\"predicate\":\"createdBy\",\"object\":\"Gustave Eiffel\"},\n    {\"subject\":\"Eiffel Tower\",\"predicate\":\"completedIn\",\"object\":\"1889\"}\n  ]\n}\n\nInput: \"Pyramids of Giza\"\nOutput:\n{\n  \"facts\": [\n    {\"subject\":\"Pyramids of Giza\",\"predicate\":\"instanceOf\",\"object\":\"pyramids\"},\n    {\"subject\":\"Pyramids of Giza\",\"predicate\":\"locatedIn\",\"object\":\"Giza\"},\n    {\"subject\":\"Pyramids of Giza\",\"predicate\":\"country\",\"object\":\"Egypt\"},\n    {\"subject\":\"Pyramids of Giza\",\"predicate\":\"partOf\",\"object\":\"Giza pyramid complex\"}\n  ]\n}\n\nInput: \"Game of Thrones\"\nOutput:\n{\n  \"facts\": [\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"instanceOf\",\"object\":\"television series\"},\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"genre\",\"object\":\"fantasy drama\"},\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"basedOn\",\"object\":\"A Song of Ice and Fire\"},\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"createdBy\",\"object\":\"David Benioff\"},\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"createdBy\",\"object\":\"D. B. Weiss\"},\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"network\",\"object\":\"HBO\"},\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"firstAired\",\"object\":\"2011\"},\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"lastAired\",\"object\":\"2019\"},\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"filmedIn\",\"object\":\"Northern Ireland\"},\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"won\",\"object\":\"Primetime Emmy Award for Outstanding Drama Series\"}\n  ]\n}\n\nInput: \"World War II\"\nOutput:\n{\n  \"facts\": [\n    {\"subject\":\"World War II\",\"predicate\":\"instanceOf\",\"object\":\"global war\"},\n    {\"subject\":\"World War II\",\"predicate\":\"startYear\",\"object\":\"1939\"},\n    {\"subject\":\"World War II\",\"predicate\":\"endYear\",\"object\":\"1945\"},\n    {\"subject\":\"World War II\",\"predicate\":\"majorParticipants\",\"object\":\"Allied Powers\"},\n    {\"subject\":\"World War II\",\"predicate\":\"majorParticipants\",\"object\":\"Axis Powers\"},\n    {\"subject\":\"World War II\",\"predicate\":\"causedBy\",\"object\":\"German invasion of Poland\"},\n    {\"subject\":\"World War II\",\"predicate\":\"endedWith\",\"object\":\"surrender of Germany\"},\n    {\"subject\":\"World War II\",\"predicate\":\"endedWith\",\"object\":\"surrender of Japan\"},\n    {\"subject\":\"World War II\",\"predicate\":\"resultedIn\",\"object\":\"formation of the United Nations\"},\n    {\"subject\":\"World War II\",\"predicate\":\"country\",\"object\":\"Germany\"},\n    {\"subject\":\"World War II\",\"predicate\":\"country\",\"object\":\"United States\"},\n    {\"subject\":\"World War II\",\"predicate\":\"country\",\"object\":\"United Kingdom\"},\n    {\"subject\":\"World War II\",\"predicate\":\"country\",\"object\":\"Soviet Union\"},\n    {\"subject\":\"World War II\",\"predicate\":\"country\",\"object\":\"Japan\"}\n  ]\n}\n\nNow, given the subject below, produce a JSON list of (subject, predicate, object) triples:\n{\n  \"triples\": [\n    { \"subject\": \"...\", \"predicate\": \"...\", \"object\": \"...\" }\n  ]\n}\n\nSubject: DAX 30 Index"}], "max_tokens": 2000, "temperature": 0.0, "top_p": 1.0, "response_format": {"type": "json_schema", "json_schema": {"name": "schema", "schema": {"type": "object", "properties": {"facts": {"type": "array", "items": {"type": "object", "properties": {"subject": {"type": "string"}, "predicate": {"type": "string"}, "object": {"type": "string"}}, "required": ["subject", "predicate", "object"]}}}, "required": ["facts"]}}}}}
{"custom_id": "Deutsche Börse", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "system", "content": "Return JSON only."}, {"role": "user", "content": "You are a knowledge base construction expert.\n\n## Objective\nExtract factual (subject, predicate, object) triples for the given subject with **both high precision and high recall**.\n\n- **High precision:** Only include facts you are confident are true. Never guess or extrapolate.\n- **High recall:** Cover names, aliases, instance types, roles/positions, works, dates (coarse years ok), places, affiliations, awards, events, parts/contains, composition, influenced/inspired, predecessors/successors, etc.\n\nIf the subject is fictional/ambiguous/speculative or you are **not confident**, return exactly:\n{\"facts\": []}\n\n## Coverage & Bias-Aware Guidance\n- Actively consider **global coverage** (Global North/South, West/East). Do not default to Western entities/relations.\n\nAvoid hyper-specific long-tail details (episode numbers, street addresses, catalog/serial IDs).\n\n## Quantity & Quality Rules\n\n- **Globally famous subjects:** produce **50–100+** concise, factual triples.\n- **Moderately famous subjects:** produce **30–50**.\n- **Lesser-known but real subjects:** produce **10–30**.\n- **Unknown, ambiguous, or fictional subjects:** return exactly `{\"facts\": []}`.\n\n### Structural & Quality Requirements\n- Include at least one `\"instanceOf\"` triple when applicable.\n- Keep objects concise and use canonical names (avoid aliases unless relevant).\n- Each triple must be **atomic** — split multiple objects into separate triples.\n- **De-duplicate** all triples and avoid contradictions.\n- Maintain high precision — do not invent or speculate.\n- **STRICT JSON ONLY** — no prose, no markdown, no code fences.\n- Be generous but realistic: capture broad, well-known facts rather than obscure trivia.\n\n\n## Output contract\n- **STRICT JSON ONLY** — no prose, no markdown, no code fences.\n- Return the single object:\n  {\n    \"facts\": [\n      {\"subject\":\"...\", \"predicate\":\"...\", \"object\":\"...\"}\n    ]\n  }\n- Always include at least one `\"instanceOf\"`.\n- Keep each triple atomic. Use canonical, concise object names. De-duplicate.\n\n---\n\n## ✅ Positive ICL (general, high-precision)\n\nInput: \"Eiffel Tower\"\nOutput:\n{\n  \"facts\": [\n    {\"subject\":\"Eiffel Tower\",\"predicate\":\"instanceOf\",\"object\":\"tower\"},\n    {\"subject\":\"Eiffel Tower\",\"predicate\":\"locatedIn\",\"object\":\"Paris\"},\n    {\"subject\":\"Eiffel Tower\",\"predicate\":\"country\",\"object\":\"France\"},\n    {\"subject\":\"Eiffel Tower\",\"predicate\":\"createdBy\",\"object\":\"Gustave Eiffel\"},\n    {\"subject\":\"Eiffel Tower\",\"predicate\":\"completedIn\",\"object\":\"1889\"}\n  ]\n}\n\nInput: \"Pyramids of Giza\"\nOutput:\n{\n  \"facts\": [\n    {\"subject\":\"Pyramids of Giza\",\"predicate\":\"instanceOf\",\"object\":\"pyramids\"},\n    {\"subject\":\"Pyramids of Giza\",\"predicate\":\"locatedIn\",\"object\":\"Giza\"},\n    {\"subject\":\"Pyramids of Giza\",\"predicate\":\"country\",\"object\":\"Egypt\"},\n    {\"subject\":\"Pyramids of Giza\",\"predicate\":\"partOf\",\"object\":\"Giza pyramid complex\"}\n  ]\n}\n\nInput: \"Game of Thrones\"\nOutput:\n{\n  \"facts\": [\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"instanceOf\",\"object\":\"television series\"},\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"genre\",\"object\":\"fantasy drama\"},\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"basedOn\",\"object\":\"A Song of Ice and Fire\"},\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"createdBy\",\"object\":\"David Benioff\"},\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"createdBy\",\"object\":\"D. B. Weiss\"},\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"network\",\"object\":\"HBO\"},\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"firstAired\",\"object\":\"2011\"},\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"lastAired\",\"object\":\"2019\"},\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"filmedIn\",\"object\":\"Northern Ireland\"},\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"won\",\"object\":\"Primetime Emmy Award for Outstanding Drama Series\"}\n  ]\n}\n\nInput: \"World War II\"\nOutput:\n{\n  \"facts\": [\n    {\"subject\":\"World War II\",\"predicate\":\"instanceOf\",\"object\":\"global war\"},\n    {\"subject\":\"World War II\",\"predicate\":\"startYear\",\"object\":\"1939\"},\n    {\"subject\":\"World War II\",\"predicate\":\"endYear\",\"object\":\"1945\"},\n    {\"subject\":\"World War II\",\"predicate\":\"majorParticipants\",\"object\":\"Allied Powers\"},\n    {\"subject\":\"World War II\",\"predicate\":\"majorParticipants\",\"object\":\"Axis Powers\"},\n    {\"subject\":\"World War II\",\"predicate\":\"causedBy\",\"object\":\"German invasion of Poland\"},\n    {\"subject\":\"World War II\",\"predicate\":\"endedWith\",\"object\":\"surrender of Germany\"},\n    {\"subject\":\"World War II\",\"predicate\":\"endedWith\",\"object\":\"surrender of Japan\"},\n    {\"subject\":\"World War II\",\"predicate\":\"resultedIn\",\"object\":\"formation of the United Nations\"},\n    {\"subject\":\"World War II\",\"predicate\":\"country\",\"object\":\"Germany\"},\n    {\"subject\":\"World War II\",\"predicate\":\"country\",\"object\":\"United States\"},\n    {\"subject\":\"World War II\",\"predicate\":\"country\",\"object\":\"United Kingdom\"},\n    {\"subject\":\"World War II\",\"predicate\":\"country\",\"object\":\"Soviet Union\"},\n    {\"subject\":\"World War II\",\"predicate\":\"country\",\"object\":\"Japan\"}\n  ]\n}\n\nNow, given the subject below, produce a JSON list of (subject, predicate, object) triples:\n{\n  \"triples\": [\n    { \"subject\": \"...\", \"predicate\": \"...\", \"object\": \"...\" }\n  ]\n}\n\nSubject: Deutsche Börse"}], "max_tokens": 2000, "temperature": 0.0, "top_p": 1.0, "response_format": {"type": "json_schema", "json_schema": {"name": "schema", "schema": {"type": "object", "properties": {"facts": {"type": "array", "items": {"type": "object", "properties": {"subject": {"type": "string"}, "predicate": {"type": "string"}, "object": {"type": "string"}}, "required": ["subject", "predicate", "object"]}}}, "required": ["facts"]}}}}}
{"custom_id": "Deutsche Börse AG", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "system", "content": "Return JSON only."}, {"role": "user", "content": "You are a knowledge base construction expert.\n\n## Objective\nExtract factual (subject, predicate, object) triples for the given subject with **both high precision and high recall**.\n\n- **High precision:** Only include facts you are confident are true. Never guess or extrapolate.\n- **High recall:** Cover names, aliases, instance types, roles/positions, works, dates (coarse years ok), places, affiliations, awards, events, parts/contains, composition, influenced/inspired, predecessors/successors, etc.\n\nIf the subject is fictional/ambiguous/speculative or you are **not confident**, return exactly:\n{\"facts\": []}\n\n## Coverage & Bias-Aware Guidance\n- Actively consider **global coverage** (Global North/South, West/East). Do not default to Western entities/relations.\n\nAvoid hyper-specific long-tail details (episode numbers, street addresses, catalog/serial IDs).\n\n## Quantity & Quality Rules\n\n- **Globally famous subjects:** produce **50–100+** concise, factual triples.\n- **Moderately famous subjects:** produce **30–50**.\n- **Lesser-known but real subjects:** produce **10–30**.\n- **Unknown, ambiguous, or fictional subjects:** return exactly `{\"facts\": []}`.\n\n### Structural & Quality Requirements\n- Include at least one `\"instanceOf\"` triple when applicable.\n- Keep objects concise and use canonical names (avoid aliases unless relevant).\n- Each triple must be **atomic** — split multiple objects into separate triples.\n- **De-duplicate** all triples and avoid contradictions.\n- Maintain high precision — do not invent or speculate.\n- **STRICT JSON ONLY** — no prose, no markdown, no code fences.\n- Be generous but realistic: capture broad, well-known facts rather than obscure trivia.\n\n\n## Output contract\n- **STRICT JSON ONLY** — no prose, no markdown, no code fences.\n- Return the single object:\n  {\n    \"facts\": [\n      {\"subject\":\"...\", \"predicate\":\"...\", \"object\":\"...\"}\n    ]\n  }\n- Always include at least one `\"instanceOf\"`.\n- Keep each triple atomic. Use canonical, concise object names. De-duplicate.\n\n---\n\n## ✅ Positive ICL (general, high-precision)\n\nInput: \"Eiffel Tower\"\nOutput:\n{\n  \"facts\": [\n    {\"subject\":\"Eiffel Tower\",\"predicate\":\"instanceOf\",\"object\":\"tower\"},\n    {\"subject\":\"Eiffel Tower\",\"predicate\":\"locatedIn\",\"object\":\"Paris\"},\n    {\"subject\":\"Eiffel Tower\",\"predicate\":\"country\",\"object\":\"France\"},\n    {\"subject\":\"Eiffel Tower\",\"predicate\":\"createdBy\",\"object\":\"Gustave Eiffel\"},\n    {\"subject\":\"Eiffel Tower\",\"predicate\":\"completedIn\",\"object\":\"1889\"}\n  ]\n}\n\nInput: \"Pyramids of Giza\"\nOutput:\n{\n  \"facts\": [\n    {\"subject\":\"Pyramids of Giza\",\"predicate\":\"instanceOf\",\"object\":\"pyramids\"},\n    {\"subject\":\"Pyramids of Giza\",\"predicate\":\"locatedIn\",\"object\":\"Giza\"},\n    {\"subject\":\"Pyramids of Giza\",\"predicate\":\"country\",\"object\":\"Egypt\"},\n    {\"subject\":\"Pyramids of Giza\",\"predicate\":\"partOf\",\"object\":\"Giza pyramid complex\"}\n  ]\n}\n\nInput: \"Game of Thrones\"\nOutput:\n{\n  \"facts\": [\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"instanceOf\",\"object\":\"television series\"},\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"genre\",\"object\":\"fantasy drama\"},\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"basedOn\",\"object\":\"A Song of Ice and Fire\"},\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"createdBy\",\"object\":\"David Benioff\"},\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"createdBy\",\"object\":\"D. B. Weiss\"},\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"network\",\"object\":\"HBO\"},\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"firstAired\",\"object\":\"2011\"},\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"lastAired\",\"object\":\"2019\"},\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"filmedIn\",\"object\":\"Northern Ireland\"},\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"won\",\"object\":\"Primetime Emmy Award for Outstanding Drama Series\"}\n  ]\n}\n\nInput: \"World War II\"\nOutput:\n{\n  \"facts\": [\n    {\"subject\":\"World War II\",\"predicate\":\"instanceOf\",\"object\":\"global war\"},\n    {\"subject\":\"World War II\",\"predicate\":\"startYear\",\"object\":\"1939\"},\n    {\"subject\":\"World War II\",\"predicate\":\"endYear\",\"object\":\"1945\"},\n    {\"subject\":\"World War II\",\"predicate\":\"majorParticipants\",\"object\":\"Allied Powers\"},\n    {\"subject\":\"World War II\",\"predicate\":\"majorParticipants\",\"object\":\"Axis Powers\"},\n    {\"subject\":\"World War II\",\"predicate\":\"causedBy\",\"object\":\"German invasion of Poland\"},\n    {\"subject\":\"World War II\",\"predicate\":\"endedWith\",\"object\":\"surrender of Germany\"},\n    {\"subject\":\"World War II\",\"predicate\":\"endedWith\",\"object\":\"surrender of Japan\"},\n    {\"subject\":\"World War II\",\"predicate\":\"resultedIn\",\"object\":\"formation of the United Nations\"},\n    {\"subject\":\"World War II\",\"predicate\":\"country\",\"object\":\"Germany\"},\n    {\"subject\":\"World War II\",\"predicate\":\"country\",\"object\":\"United States\"},\n    {\"subject\":\"World War II\",\"predicate\":\"country\",\"object\":\"United Kingdom\"},\n    {\"subject\":\"World War II\",\"predicate\":\"country\",\"object\":\"Soviet Union\"},\n    {\"subject\":\"World War II\",\"predicate\":\"country\",\"object\":\"Japan\"}\n  ]\n}\n\nNow, given the subject below, produce a JSON list of (subject, predicate, object) triples:\n{\n  \"triples\": [\n    { \"subject\": \"...\", \"predicate\": \"...\", \"object\": \"...\" }\n  ]\n}\n\nSubject: Deutsche Börse AG"}], "max_tokens": 2000, "temperature": 0.0, "top_p": 1.0, "response_format": {"type": "json_schema", "json_schema": {"name": "schema", "schema": {"type": "object", "properties": {"facts": {"type": "array", "items": {"type": "object", "properties": {"subject": {"type": "string"}, "predicate": {"type": "string"}, "object": {"type": "string"}}, "required": ["subject", "predicate", "object"]}}}, "required": ["facts"]}}}}}
{"custom_id": "Euro", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o-mini", "messages": [{"role": "system", "content": "Return JSON only."}, {"role": "user", "content": "You are a knowledge base construction expert.\n\n## Objective\nExtract factual (subject, predicate, object) triples for the given subject with **both high precision and high recall**.\n\n- **High precision:** Only include facts you are confident are true. Never guess or extrapolate.\n- **High recall:** Cover names, aliases, instance types, roles/positions, works, dates (coarse years ok), places, affiliations, awards, events, parts/contains, composition, influenced/inspired, predecessors/successors, etc.\n\nIf the subject is fictional/ambiguous/speculative or you are **not confident**, return exactly:\n{\"facts\": []}\n\n## Coverage & Bias-Aware Guidance\n- Actively consider **global coverage** (Global North/South, West/East). Do not default to Western entities/relations.\n\nAvoid hyper-specific long-tail details (episode numbers, street addresses, catalog/serial IDs).\n\n## Quantity & Quality Rules\n\n- **Globally famous subjects:** produce **50–100+** concise, factual triples.\n- **Moderately famous subjects:** produce **30–50**.\n- **Lesser-known but real subjects:** produce **10–30**.\n- **Unknown, ambiguous, or fictional subjects:** return exactly `{\"facts\": []}`.\n\n### Structural & Quality Requirements\n- Include at least one `\"instanceOf\"` triple when applicable.\n- Keep objects concise and use canonical names (avoid aliases unless relevant).\n- Each triple must be **atomic** — split multiple objects into separate triples.\n- **De-duplicate** all triples and avoid contradictions.\n- Maintain high precision — do not invent or speculate.\n- **STRICT JSON ONLY** — no prose, no markdown, no code fences.\n- Be generous but realistic: capture broad, well-known facts rather than obscure trivia.\n\n\n## Output contract\n- **STRICT JSON ONLY** — no prose, no markdown, no code fences.\n- Return the single object:\n  {\n    \"facts\": [\n      {\"subject\":\"...\", \"predicate\":\"...\", \"object\":\"...\"}\n    ]\n  }\n- Always include at least one `\"instanceOf\"`.\n- Keep each triple atomic. Use canonical, concise object names. De-duplicate.\n\n---\n\n## ✅ Positive ICL (general, high-precision)\n\nInput: \"Eiffel Tower\"\nOutput:\n{\n  \"facts\": [\n    {\"subject\":\"Eiffel Tower\",\"predicate\":\"instanceOf\",\"object\":\"tower\"},\n    {\"subject\":\"Eiffel Tower\",\"predicate\":\"locatedIn\",\"object\":\"Paris\"},\n    {\"subject\":\"Eiffel Tower\",\"predicate\":\"country\",\"object\":\"France\"},\n    {\"subject\":\"Eiffel Tower\",\"predicate\":\"createdBy\",\"object\":\"Gustave Eiffel\"},\n    {\"subject\":\"Eiffel Tower\",\"predicate\":\"completedIn\",\"object\":\"1889\"}\n  ]\n}\n\nInput: \"Pyramids of Giza\"\nOutput:\n{\n  \"facts\": [\n    {\"subject\":\"Pyramids of Giza\",\"predicate\":\"instanceOf\",\"object\":\"pyramids\"},\n    {\"subject\":\"Pyramids of Giza\",\"predicate\":\"locatedIn\",\"object\":\"Giza\"},\n    {\"subject\":\"Pyramids of Giza\",\"predicate\":\"country\",\"object\":\"Egypt\"},\n    {\"subject\":\"Pyramids of Giza\",\"predicate\":\"partOf\",\"object\":\"Giza pyramid complex\"}\n  ]\n}\n\nInput: \"Game of Thrones\"\nOutput:\n{\n  \"facts\": [\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"instanceOf\",\"object\":\"television series\"},\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"genre\",\"object\":\"fantasy drama\"},\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"basedOn\",\"object\":\"A Song of Ice and Fire\"},\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"createdBy\",\"object\":\"David Benioff\"},\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"createdBy\",\"object\":\"D. B. Weiss\"},\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"network\",\"object\":\"HBO\"},\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"firstAired\",\"object\":\"2011\"},\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"lastAired\",\"object\":\"2019\"},\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"filmedIn\",\"object\":\"Northern Ireland\"},\n    {\"subject\":\"Game of Thrones\",\"predicate\":\"won\",\"object\":\"Primetime Emmy Award for Outstanding Drama Series\"}\n  ]\n}\n\nInput: \"World War II\"\nOutput:\n{\n  \"facts\": [\n    {\"subject\":\"World War II\",\"predicate\":\"instanceOf\",\"object\":\"global war\"},\n    {\"subject\":\"World War II\",\"predicate\":\"startYear\",\"object\":\"1939\"},\n    {\"subject\":\"World War II\",\"predicate\":\"endYear\",\"object\":\"1945\"},\n    {\"subject\":\"World War II\",\"predicate\":\"majorParticipants\",\"object\":\"Allied Powers\"},\n    {\"subject\":\"World War II\",\"predicate\":\"majorParticipants\",\"object\":\"Axis Powers\"},\n    {\"subject\":\"World War II\",\"predicate\":\"causedBy\",\"object\":\"German invasion of Poland\"},\n    {\"subject\":\"World War II\",\"predicate\":\"endedWith\",\"object\":\"surrender of Germany\"},\n    {\"subject\":\"World War II\",\"predicate\":\"endedWith\",\"object\":\"surrender of Japan\"},\n    {\"subject\":\"World War II\",\"predicate\":\"resultedIn\",\"object\":\"formation of the United Nations\"},\n    {\"subject\":\"World War II\",\"predicate\":\"country\",\"object\":\"Germany\"},\n    {\"subject\":\"World War II\",\"predicate\":\"country\",\"object\":\"United States\"},\n    {\"subject\":\"World War II\",\"predicate\":\"country\",\"object\":\"United Kingdom\"},\n    {\"subject\":\"World War II\",\"predicate\":\"country\",\"object\":\"Soviet Union\"},\n    {\"subject\":\"World War II\",\"predicate\":\"country\",\"object\":\"Japan\"}\n  ]\n}\n\nNow, given the subject below, produce a JSON list of (subject, predicate, object) triples:\n{\n  \"triples\": [\n    { \"subject\": \"...\", \"predicate\": \"...\", \"object\": \"...\" }\n  ]\n}\n\nSubject: Euro"}], "max_tokens": 2000, "temperature": 0.0, "top_p": 1.0, "response_format": {"type": "json_schema", "json_schema": {"name": "schema", "schema": {"type": "object", "properties": {"facts": {"type": "array", "items": {"type": "object", "properties": {"subject": {"type": "string"}, "predicate": {"type": "string"}, "object": {"type": "string"}}, "required": ["subject", "predicate", "object"]}}}, "required": ["facts"]}}}}}
